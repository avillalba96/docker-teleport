version: '3'
services:
  teleport:
    image: public.ecr.aws/gravitational/teleport:12.1.5
    container_name: teleport
    restart: unless-stopped
    entrypoint: /bin/sh
    hostname: tp.example.com
    command: -c "sleep 1 && /usr/bin/dumb-init teleport start -c /etc/teleport/teleport.yaml"
    profiles:
      - teleport
      - full
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 2048M
    ports:
      - "3023:3023"
      - "3024:3024"
      - "3025:3025"
      - "3026:3026"
      - "3080:3080"
    volumes:
      - ./teleport/config:/etc/teleport
      - ./teleport/data:/var/lib/teleport
#    environment:
#      AWS_ACCESS_KEY_ID: "XXXX"
#      AWS_SECRET_ACCESS_KEY: "XXXX"
#      AWS_DEFAULT_REGION: "XXXX"
    networks:
      - npm-network
      - default
  npm-app:
    hostname: npm-app
    container_name: npm-app
    image: 'jc21/nginx-proxy-manager:2.9.18'
    restart: unless-stopped
    profiles:
      - full
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 1024M
    ports:
      - '80:80'
      - '443:443'
      - '81:81'
    environment:
      DB_MYSQL_HOST: $MYSQL_HOST
      DB_MYSQL_PORT: $MYSQL_PORT
      DB_MYSQL_USER: $MYSQL_USER
      DB_MYSQL_PASSWORD: $MYSQL_PASS
      DB_MYSQL_NAME: $MYSQL_DB
      DISABLE_IPV6: 'true'
    volumes:
      - ./data:/data
      - ./letsencrypt:/etc/letsencrypt
    depends_on:
      - npm-db
    networks:
      - npm-network
      - default

  npm-db:
    hostname: npm-db
    container_name: npm-db
    image: 'jc21/mariadb-aria:10.4.15'
    profiles:
      - full
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 1024M
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD:  $ROOT_PASSWORD
      MYSQL_DATABASE: $MYSQL_DB
      MYSQL_USER: $MYSQL_USER
      MYSQL_PASSWORD: $MYSQL_PASS
    volumes:
      - ./data/mysql:/var/lib/mysql

networks:
  npm-network:
    name: npm-network
    external: true
